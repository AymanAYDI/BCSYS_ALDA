OBJECT Report 50031 Batch Post Sales Orders 2
{
  OBJECT-PROPERTIES
  {
    Date=04/03/16;
    Time=17:17:02;
    Modified=Yes;
    Version List=ALDA,2016;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Batch Post Sales Orders;
               FRA=TPL valider commandes vente];
    ShowPrintStatus=No;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   CalcInvDisc := TRUE;
                   ShowEndMsg := TRUE;
                   Sent2Mail := TRUE;
                   CR := 13;
                   LF := 10;
                   Loop := 2;
                   FileName := '\\SALDANAV01\Facture auto\NAV_' + FORMAT(TODAY,0,'<Month,2><Day,2><Year>') + '_' +
                     FORMAT(TIME,0,'<Hours24><Minutes,2><Seconds,2>') + '.txt';
                   AnsiAsciiFile := AnsiAsciiFile::ANSI;
                 END;

    OnPreReport=BEGIN
                  IF GUIALLOWED THEN
                    Window.OPEN(Text001);

                  CompanyInfo.GET;

                  CLEAR(CurrFile);
                  CLEAR(CurrFileOutStream);

                  CurrFile.WRITEMODE(TRUE);
                  CurrFile.TEXTMODE(TRUE);
                  CurrFile.CREATE(FileName);
                  CurrFile.CREATEOUTSTREAM(CurrFileOutStream);
                END;

    OnPostReport=BEGIN
                   LineFile := STRSUBSTNO(Text002,CounterOK,CounterGeneralTotal);
                   CASE AnsiAsciiFile OF
                       AnsiAsciiFile::ANSI:LineFile := Ascii2Ansi(LineFile);
                       AnsiAsciiFile::ASCII:LineFile := Ansi2Ascii(LineFile);
                   END;//CASE
                   CurrFileOutStream.WRITETEXT(ConvChar160To32(LineFile) + FORMAT(CR) + FORMAT(LF));
                   CurrFile.CLOSE;
                   CLEAR(CurrFile);
                   SLEEP(1000);

                   IF GUIALLOWED THEN BEGIN
                     Window.CLOSE;
                     IF ShowEndMsg THEN
                       MESSAGE(Text002,CounterOK,CounterGeneralTotal)
                   END;

                   IF Sent2Mail THEN BEGIN
                     CLEAR(SMTPMail);
                     SMTPMail.CreateMessage(COMPANYNAME,CompanyInfo."E-Mail",CompanyInfo."E-mail for Sent Items",
                       STRSUBSTNO(Text002,CounterOK,CounterGeneralTotal),LineFile,TRUE);
                     SMTPMail.AddAttachment(FileName, FileName);
                     SMTPMail.Send();
                   END;
                 END;

  }
  DATASET
  {
    { 5290;    ;DataItem;                    ;
               DataItemTable=Table472;
               DataItemTableView=SORTING(ID);
               MaxIteration=1 }

    { 5291;    ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(No.)
                                 WHERE(Auto. Post Invoice=CONST(Yes));
               OnAfterGetRecord=BEGIN
                                  IF GUIALLOWED THEN
                                    Window.UPDATE(1,"No.");
                                END;
                                 }

    { 52920;1  ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,Sell-to Customer No.,No.)
                                 WHERE(Document Type=CONST(Order),
                                       Completely Shipped=CONST(Yes));
               OnPreDataItem=VAR
                               ApprovalsMgmt@1000000000 : Codeunit 1535;
                             BEGIN

                               IF ApprovalsMgmt.IsSalesApprovalsWorkflowEnabled("Sales Header") OR (Status = Status::"Pending Approval") THEN
                               {
                               ApprovalTemplate.SETCURRENTKEY(ApprovalTemplate."Table ID",ApprovalTemplate."Document Type",ApprovalTemplate.Enabled);
                               ApprovalTemplate.SETRANGE("Table ID",DATABASE::"Sales Header");
                               ApprovalTemplate.SETRANGE("Document Type","Sales Header"."Document Type"::Order);
                               ApprovalTemplate.SETRANGE(Enabled,TRUE);
                               IF ApprovalTemplate.FINDFIRST THEN
                               }
                                 "Sales Header".SETRANGE(Status,"Sales Header".Status::Released);

                               CounterTotal := COUNT;
                               CounterGeneralTotal += CounterTotal;
                               Counter := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF CalcInvDisc THEN
                                    CalculateInvoiceDiscount;

                                  Counter := Counter + 1;
                                  IF GUIALLOWED THEN BEGIN
                                    Window.UPDATE(2,"No.");
                                    Window.UPDATE(3,ROUND(Counter / CounterTotal * 10000,1));
                                  END;
                                  "Sales Header".Ship := FALSE;
                                  "Sales Header".Invoice := TRUE;
                                  CLEAR(SalesPost);

                                  IF SalesPost.RUN("Sales Header") THEN BEGIN
                                    CounterOK := CounterOK + 1;
                                    IF MARKEDONLY THEN
                                      MARK(FALSE);
                                    ErrorText := 'OK';
                                  END ELSE BEGIN
                                    ErrorText := COPYSTR(GETLASTERRORTEXT,1,MAXSTRLEN(ErrorText));
                                    CLEARLASTERROR;
                                  END;

                                  ColValue[1] := FORMAT(SalesLine."Document No.");
                                  ColValue[2] := ErrorText;
                                  FOR i := 1 TO Loop DO BEGIN
                                    CASE AnsiAsciiFile OF
                                      AnsiAsciiFile::ANSI:ColValue[i] := Ascii2Ansi(ColValue[i]);
                                      AnsiAsciiFile::ASCII:ColValue[i] := Ansi2Ascii(ColValue[i]);
                                    END;//CASE
                                    ColValue[i] := ConvChar160To32(ColValue[i]);
                                    ColValue[i] := ConvSemicolonInQuotes(ColValue[i]);
                                    ColValue[i] := ConvQuotes2Quotes(ColValue[i]);
                                  END;//FOR
                                  LineFile := '';
                                  FOR i := 1 TO Loop DO
                                    IF i = 1 THEN
                                      LineFile := ColValue[i]
                                    ELSE
                                       LineFile := LineFile + ';' + ColValue[i];
                                  CurrFileOutStream.WRITETEXT(LineFile + FORMAT(CR) + FORMAT(LF));
                                END;

               CalcFields=Completely Shipped;
               DataItemLink=Bill-to Customer No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1180250011;0;Container;
                  ContainerType=ContentArea }

      { 1180250010;1;Group  ;
                  CaptionML=[ENU=Options;
                             FRA=Options] }

      { 1180250004;2;Field  ;
                  CaptionML=[ENU=Calc. Inv. Discount;
                             FRA=Calculer remise facture];
                  SourceExpr=CalcInvDisc;
                  OnValidate=BEGIN
                               SalesSetup.GET;
                               SalesSetup.TESTFIELD("Calc. Inv. Discount",FALSE);
                             END;
                              }

      { 1180250001;2;Field  ;
                  CaptionML=[ENU=Show End Message;
                             FRA=Afficher message de fin];
                  SourceExpr=ShowEndMsg }

      { 1180250002;2;Field  ;
                  CaptionML=[ENU=Sent to Mail;
                             FRA=Envoyer par mail];
                  SourceExpr=Sent2Mail }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1180250032 : Record 79;
      SalesLine@1180250025 : Record 37;
      Text000@1180250005 : TextConst 'ENU=Please enter the posting date.;FRA=Veuillez entrer une date de comptabilisation.';
      Text001@1180250004 : TextConst 'ENU=Bill-to customer #1##########\Posting orders  #2########## @3@@@@@@@@@@@@@;FRA=Client factur‚ #1##########\Validation des commandes #2########## @3@@@@@@@@@@@@@';
      Text002@1180250003 : TextConst 'ENU=%1 orders out of a total of %2 have now been posted.;FRA=%1 commande(s) sur %2 enregistr‚e(s).';
      Text003@1180250001 : TextConst 'ENU=The exchange rate associated with the new posting date on the sales header will not apply to the sales lines.;FRA=Le taux de change associ‚ … la nouvelle date de comptabilisation de l''en-tˆte vente ne s''appliquera pas aux lignes vente.';
      SalesSetup@1180250024 : Record 311;
      SalesCalcDisc@1180250022 : Codeunit 60;
      SalesPost@1180250021 : Codeunit 80;
      SMTPMail@1180250031 : Codeunit 400;
      Window@1180250020 : Dialog;
      CounterTotal@1180250016 : Integer;
      CounterGeneralTotal@1180250006 : Integer;
      Counter@1180250015 : Integer;
      CounterOK@1180250014 : Integer;
      CalcInvDisc@1180250011 : Boolean;
      ShowEndMsg@1180250002 : Boolean;
      Sent2Mail@1180250034 : Boolean;
      ErrorText@1180250007 : Text[80];
      CurrFile@1180250029 : File;
      FileName@1180250028 : Text[1024];
      CurrFileOutStream@1180250027 : OutStream;
      ColValue@1180250026 : ARRAY [14] OF Text[80];
      CR@1180250019 : Char;
      LF@1180250018 : Char;
      AsciiStr@1180250017 : Text[250];
      AnsiStr@1180250013 : Text[250];
      CharVar@1180250012 : ARRAY [32] OF Char;
      i@1180250010 : Integer;
      LineFile@1180250009 : Text[1024];
      AnsiAsciiFile@1180250008 : 'ANSI,ASCII';
      Loop@1180250030 : Integer;
      Text004@1180250033 : TextConst 'FRA=Commande(s) valid‚e(s) en facture(s) enregistr‚e(s)';

    PROCEDURE CalculateInvoiceDiscount@1();
    BEGIN
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type","Sales Header"."Document Type");
      SalesLine.SETRANGE("Document No.","Sales Header"."No.");
      IF SalesLine.FIND('-') THEN
        IF SalesCalcDisc.RUN(SalesLine) THEN BEGIN
          "Sales Header".GET("Sales Header"."Document Type","Sales Header"."No.");
          COMMIT;
        END;
    END;

    PROCEDURE ConvChar160To32@1180250014(_Text@1180250001 : Text[256]) : Text[256];
    BEGIN
      EXIT(CONVERTSTR(_Text,'ÿ',' '));
    END;

    PROCEDURE ConvSemicolonInQuotes@1180250018(_Text@1180250001 : Text[256]) : Text[256];
    BEGIN
      IF STRPOS(_Text,';') <> 0 THEN
        EXIT('"' + _Text + '"')
      ELSE
        EXIT(_Text);
    END;

    PROCEDURE ConvQuotes2Quotes@1180250019(_Text@1180250001 : Text[256]) : Text[256];
    BEGIN
      IF STRPOS(_Text,'"') <> 0 THEN BEGIN
        EXIT('"' + CONVERTSTR(_Text,'"','""') + '"');
      END ELSE
        EXIT(_Text);
    END;

    PROCEDURE Ansi2Ascii@1180250015(_Text@1180250001 : Text[250]) : Text[250];
    BEGIN
      MakeVars;
      EXIT(CONVERTSTR(_Text,AnsiStr,AsciiStr));
    END;

    PROCEDURE Ascii2Ansi@1180250016(_Text@1180250001 : Text[250]) : Text[250];
    BEGIN
      MakeVars;
      EXIT(CONVERTSTR(_Text,AsciiStr,AnsiStr));
    END;

    PROCEDURE MakeVars@1180250017();
    BEGIN
      AsciiStr := '€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ ¡¢£¤¥¦§¨©ª«¬­®¯ÝÝÝÝÝµ¶·¸ÝÝ++½¾++--+-+ÆÇ++--Ý-+';
      AsciiStr := AsciiStr +'ÏÐÑÒÓÔiÖ×Ø++Ý_ÝÞîàáâãäåæçèéêëìíîïðñ=óôõö÷øùúûüýÝÿ';
      CharVar[1] := 196;
      CharVar[2] := 197;
      CharVar[3] := 201;
      CharVar[4] := 242;
      CharVar[5] := 220;
      CharVar[6] := 186;
      CharVar[7] := 191;
      CharVar[8] := 188;
      CharVar[9] := 187;
      CharVar[10] := 193;
      CharVar[11] := 194;
      CharVar[12] := 192;
      CharVar[13] := 195;
      CharVar[14] := 202;
      CharVar[15] := 203;
      CharVar[16] := 200;
      CharVar[17] := 205;
      CharVar[18] := 206;
      CharVar[19] := 204;
      CharVar[20] := 175;
      CharVar[21] := 223;
      CharVar[22] := 213;
      CharVar[23] := 254;
      CharVar[24] := 218;
      CharVar[25] := 219;
      CharVar[26] := 217;
      CharVar[27] := 180;
      CharVar[28] := 177;
      CharVar[29] := 176;
      CharVar[30] := 185;
      CharVar[31] := 179;
      CharVar[32] := 178;
      AnsiStr  := 'Çüéâäàåçêëèïîì'+FORMAT(CharVar[1])+FORMAT(CharVar[2])+FORMAT(CharVar[3])+ 'æÆôö'+FORMAT(CharVar[4]);
      AnsiStr := AnsiStr + 'ûùÿÖ'+FORMAT(CharVar[5])+'ø£Ø×ƒáíóúñÑª'+FORMAT(CharVar[6])+FORMAT(CharVar[7]);
      AnsiStr := AnsiStr + '®¬½'+FORMAT(CharVar[8])+'¡«'+FORMAT(CharVar[9])+'___¦¦' + FORMAT(CharVar[10])+FORMAT(CharVar[11]);
      AnsiStr := AnsiStr + FORMAT(CharVar[12]) + '©¦¦++¢¥++--+-+ã' + FORMAT(CharVar[13]) + '++--¦-+¤ðÐ';
      AnsiStr  :=  AnsiStr +FORMAT(CharVar[14])+FORMAT(CharVar[15])+FORMAT(CharVar[16])+'i'+FORMAT(CharVar[17])+FORMAT(CharVar[18]);
      AnsiStr  :=  AnsiStr + 'Ï++__¦' + FORMAT(CharVar[19])+FORMAT(CharVar[20])+'Ó'+FORMAT(CharVar[21])+'ÔÒõ';
      AnsiStr  :=  AnsiStr + FORMAT(CharVar[22]) + 'µ' + FORMAT(CharVar[23]) + 'Þ' + FORMAT(CharVar[24])+ FORMAT(CharVar[25]);
      AnsiStr  :=  AnsiStr + FORMAT(CharVar[26]) + 'ýÝ¯' + FORMAT(CharVar[27]) + '­' + FORMAT(CharVar[28]) +'=¾¶§÷¸'+ FORMAT(CharVar[29]
      );
      AnsiStr  :=  AnsiStr + '¨·' + FORMAT(CharVar[30]) +FORMAT(CharVar[31]) +FORMAT(CharVar[32]) +'_ ';
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

