OBJECT Codeunit 50011 B2B Sales Shipment
{
  OBJECT-PROPERTIES
  {
    Date=13/02/15;
    Time=15:43:11;
    Modified=Yes;
    Version List=ALDA1.00;
  }
  PROPERTIES
  {
    TableNo=50001;
    Permissions=TableData 112=rm,
                TableData 114=rm;
    OnRun=VAR
            EDIEntry@1180250005 : Record 50002;
            Vendor@1180250001 : Record 23;
          BEGIN
            EDISetup.GET("EDI Code");

            ShowRequestForm := FALSE;

            IF Mode = Mode::Normal THEN
              TranserRec(EDIEntry,Rec);
            ExportRec(EDIEntry,Rec);
            ExportRec2(EDIEntry,Rec);
          END;

  }
  CODE
  {
    VAR
      Text001@1180250002 : TextConst 'FRA=N¯ sÇquence %1 : %2';
      Text002@1180250006 : TextConst 'ENU=There are no items with cross reference: %1;FRA=Il n''existe aucun article avec la rÇfÇrence externe %1.';
      EDISetup@1180250001 : Record 50000;
      ShowRequestForm@1180250004 : Boolean;
      Text003@1180250003 : TextConst 'FRA=Ligne traitÇe : %1/%2!';
      Text004@1180250009 : TextConst 'FRA=BL exportÇ : %1.';
      AsciiStr@1180250008 : Text[250];
      AnsiStr@1180250007 : Text[250];
      CharVar@1180250005 : ARRAY [32] OF Char;
      Text005@1180250010 : TextConst 'FRA=-H';
      Text006@1180250011 : TextConst 'FRA=-L';

    PROCEDURE TranserRec@1180250003(VAR EDIEntry@1180250006 : Record 50002;VAR EDILog@1180250002 : Record 50001);
    VAR
      SalesShipHeader@1180250008 : Record 110;
      SalesShipLine@1180250003 : Record 111;
      EDILog2@1180250004 : Record 50001;
    BEGIN
      EDILog2.RESET;
      EDILog2.FILTERGROUP(0);
      EDILog2.SETRANGE("EDI Code",EDILog."EDI Code");
      EDILog2.SETRANGE(Direction,EDILog.Direction);
      EDILog2.SETRANGE("Treatment Date",EDILog."Treatment Date");
      EDILog2.FILTERGROUP(2);
      REPORT.RUNMODAL(REPORT::"Batch Create EDI Sales Ship.",ShowRequestForm,FALSE,EDILog2);
      COMMIT;

      EDIEntry.RESET;
      EDIEntry.SETRANGE("EDI Code",EDILog."EDI Code");
      EDIEntry.SETRANGE("Imp./Exp. Date",EDILog."Treatment Date");
      IF EDIEntry.FIND('-') THEN BEGIN
        REPEAT
          EDIEntry.Error := FALSE;
          EDIEntry.MODIFY;
        UNTIL EDIEntry.NEXT = 0;
        COMMIT;
      END;
    END;

    LOCAL PROCEDURE ExportRec@1180250001(VAR EDIEntry@1180210000 : Record 50002;EDILog@1180250009 : Record 50001);
    VAR
      SalesShipLine@1180250022 : Record 111;
      TmpEDIEntry@1180250020 : TEMPORARY Record 50002;
      CurrFile@1180250003 : File;
      FileOutStream@1180250002 : OutStream;
      RecRef@1180250005 : RecordRef;
      FldRef@1180250007 : FieldRef;
      CarriageReturn@1180250010 : Char;
      LineFeed@1180250008 : Char;
      FieldVal@1180250012 : Text[1024];
      LabelCode@1180250013 : Text[50];
      FileName@1180250011 : Text[1024];
      Line@1180250001 : Text[1024];
      xLine@1180250017 : Text[1024];
      Fields2Import@1180250004 : ARRAY [100] OF Text[250];
      NewFile@1180250014 : Boolean;
      EndFile@1180250016 : Boolean;
      DocNo@1180250015 : Text[20];
      NbrOfLine@1180250019 : Integer;
      NbrOfHandledLine@1180250018 : Integer;
      EntryNo@1180250021 : Integer;
      i@1180250006 : Integer;
      NbrOfSalesShip@1180250024 : Integer;
    BEGIN
      CarriageReturn := 13;
      LineFeed := 10;
      NewFile := TRUE;
      NbrOfHandledLine := 0;
      NbrOfSalesShip := 0;

      CLEAR(FileOutStream);
      CLEAR(Line);
      CLEAR(Fields2Import);
      CLEAR(RecRef);

      EDIEntry.SETRANGE("Field 1",SalesShipLine.TABLENAME);

      RecRef.GETTABLE(EDIEntry);

      IF RecRef.FIND('-') THEN BEGIN
        CLEAR(FldRef);

        NbrOfLine := RecRef.COUNT;

        FldRef := RecRef.FIELD(3);
        CLEAR(CurrFile);
        CurrFile.WRITEMODE := TRUE;
        CurrFile.TEXTMODE := TRUE;
        FileName := EDISetup."Files Exp. Path" + '/' + FORMAT(EDILog."EDI Code") + STRSUBSTNO(EDISetup."Filename Filter",
          Text006 + GetFormatDT(FORMAT(FldRef.VALUE)));
        CurrFile.CREATE(FileName);

        REPEAT
          Line := '';
          FieldVal := '';
          FOR i := 12 TO 21 DO BEGIN
            CLEAR(FldRef);
            FldRef := RecRef.FIELD(i);
            FieldVal := FORMAT(FldRef.VALUE);
            FieldVal := Ascii2Ansi(FieldVal);
            IF i = 12 THEN
              Line := FieldVal
            ELSE
              Line := Line + ';' + FieldVal;
          END;//FOR
          CurrFile.WRITE(Line);
          Line := '';

          NbrOfHandledLine += 1;

          FldRef := RecRef.FIELD(1);
          FieldVal := FORMAT(FldRef.VALUE);
          EVALUATE(EntryNo,FieldVal);
          EDIEntry.GET(EntryNo);
          TmpEDIEntry := EDIEntry;
          TmpEDIEntry.Error := FALSE;
          TmpEDIEntry.INSERT;

        UNTIL RecRef.NEXT = 0;
        CurrFile.CLOSE;
      END;
    END;

    LOCAL PROCEDURE ExportRec2@1180250011(VAR EDIEntry@1180210000 : Record 50002;EDILog@1180250009 : Record 50001);
    VAR
      SalesShipHdr@1180250022 : Record 110;
      TmpEDIEntry@1180250020 : TEMPORARY Record 50002;
      CurrFile@1180250003 : File;
      FileOutStream@1180250002 : OutStream;
      RecRef@1180250005 : RecordRef;
      FldRef@1180250007 : FieldRef;
      CarriageReturn@1180250010 : Char;
      LineFeed@1180250008 : Char;
      FieldVal@1180250012 : Text[1024];
      LabelCode@1180250013 : Text[50];
      FileName@1180250011 : Text[1024];
      Line@1180250001 : Text[1024];
      xLine@1180250017 : Text[1024];
      Fields2Import@1180250004 : ARRAY [100] OF Text[250];
      NewFile@1180250014 : Boolean;
      EndFile@1180250016 : Boolean;
      DocNo@1180250015 : Text[20];
      NbrOfLine@1180250019 : Integer;
      NbrOfHandledLine@1180250018 : Integer;
      EntryNo@1180250021 : Integer;
      i@1180250006 : Integer;
      NbrOfSalesShip@1180250024 : Integer;
    BEGIN
      CarriageReturn := 13;
      LineFeed := 10;
      NewFile := TRUE;
      NbrOfHandledLine := 0;
      NbrOfSalesShip := 0;

      CLEAR(FileOutStream);
      CLEAR(Line);
      CLEAR(Fields2Import);
      CLEAR(RecRef);

      EDIEntry.SETRANGE("Field 1",SalesShipHdr.TABLENAME);

      RecRef.GETTABLE(EDIEntry);

      IF RecRef.FIND('-') THEN BEGIN
        CLEAR(FldRef);

        NbrOfLine := RecRef.COUNT;

        FldRef := RecRef.FIELD(3);
        CLEAR(CurrFile);
        CurrFile.WRITEMODE := TRUE;
        CurrFile.TEXTMODE := TRUE;
        FileName := EDISetup."Files Exp. Path" + '/' + FORMAT(EDILog."EDI Code") + STRSUBSTNO(EDISetup."Filename Filter",
          Text005 + GetFormatDT(FORMAT(FldRef.VALUE)));
        CurrFile.CREATE(FileName);

        REPEAT
          Line := '';
          FieldVal := '';
          FOR i := 12 TO  39 DO BEGIN
            CLEAR(FldRef);
            FldRef := RecRef.FIELD(i);
            FieldVal := FORMAT(FldRef.VALUE);
            FieldVal := Ascii2Ansi(FieldVal);
            IF i = 12 THEN
              Line := FieldVal
            ELSE
              Line := Line + ';' + FieldVal;
          END;//FOR
          CurrFile.WRITE(Line);
          Line := '';

          FldRef := RecRef.FIELD(13);
          DocNo := FldRef.VALUE;
          IF EDISetup."Sales Invoice" THEN BEGIN
            IF SalesShipHdr.GET(DocNo) THEN BEGIN
              SalesShipHdr.Exported := TRUE;
              SalesShipHdr."Date Exported" := EDILog."Treatment Date";
              SalesShipHdr."EDI Code" := EDILog."EDI Code";
              SalesShipHdr."EDI No." := '';
              SalesShipHdr.MODIFY;
              NbrOfSalesShip += 1;
            END;
          END;
          NbrOfHandledLine += 1;

          FldRef := RecRef.FIELD(1);
          FieldVal := FORMAT(FldRef.VALUE);
          EVALUATE(EntryNo,FieldVal);
          EDIEntry.GET(EntryNo);
          TmpEDIEntry := EDIEntry;
          TmpEDIEntry.Error := FALSE;
          TmpEDIEntry.INSERT;

        UNTIL RecRef.NEXT = 0;
        CurrFile.CLOSE;
      END;

      IF NbrOfHandledLine <> NbrOfLine THEN
        CreateEDILogEntry(EDILog."EDI Code",EDILog."Treatment Date",STRSUBSTNO(Text003,NbrOfHandledLine,NbrOfLine),2,0);
      CreateEDILogEntry(EDILog."EDI Code",EDILog."Treatment Date",STRSUBSTNO(Text004,NbrOfSalesShip),0,0);

      TmpEDIEntry.RESET;
      TmpEDIEntry.SETRANGE("EDI Code",EDILog."EDI Code");
      TmpEDIEntry.SETRANGE("Imp./Exp. Date",EDILog."Treatment Date");
      TmpEDIEntry.SETRANGE(Error,FALSE);
      IF EDIEntry.FIND('-') THEN
        REPEAT
          EDIEntry.Handled := TRUE;
          EDIEntry.MODIFY;
        UNTIL EDIEntry.NEXT = 0;
    END;

    PROCEDURE Ansi2Ascii@1180250010(_Text@1180250001 : Text[250]) : Text[250];
    BEGIN
      MakeVars;
      EXIT(CONVERTSTR(_Text,AnsiStr,AsciiStr));
    END;

    PROCEDURE Ascii2Ansi@1180250009(_Text@1180250001 : Text[250]) : Text[250];
    BEGIN
      MakeVars;
      EXIT(CONVERTSTR(_Text,AsciiStr,AnsiStr));
    END;

    PROCEDURE MakeVars@1180250005();
    BEGIN
      AsciiStr := 'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ›››››µ∂∑∏››++Ωæ++--+-+∆«++--›-+';
      AsciiStr := AsciiStr +'œ–—“”‘i÷◊ÿ++›_›ﬁÓ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒ=ÛÙıˆ˜¯˘˙˚¸˝›ˇ';
      CharVar[1] := 196;
      CharVar[2] := 197;
      CharVar[3] := 201;
      CharVar[4] := 242;
      CharVar[5] := 220;
      CharVar[6] := 186;
      CharVar[7] := 191;
      CharVar[8] := 188;
      CharVar[9] := 187;
      CharVar[10] := 193;
      CharVar[11] := 194;
      CharVar[12] := 192;
      CharVar[13] := 195;
      CharVar[14] := 202;
      CharVar[15] := 203;
      CharVar[16] := 200;
      CharVar[17] := 205;
      CharVar[18] := 206;
      CharVar[19] := 204;
      CharVar[20] := 175;
      CharVar[21] := 223;
      CharVar[22] := 213;
      CharVar[23] := 254;
      CharVar[24] := 218;
      CharVar[25] := 219;
      CharVar[26] := 217;
      CharVar[27] := 180;
      CharVar[28] := 177;
      CharVar[29] := 176;
      CharVar[30] := 185;
      CharVar[31] := 179;
      CharVar[32] := 178;
      AnsiStr  := '«¸È‚‰‡ÂÁÍÎËÔÓÏ'+FORMAT(CharVar[1])+FORMAT(CharVar[2])+FORMAT(CharVar[3])+ 'Ê∆Ùˆ'+FORMAT(CharVar[4]);
      AnsiStr := AnsiStr + '˚˘ˇ÷'+FORMAT(CharVar[5])+'¯£ÿ◊É·ÌÛ˙Ò—™'+FORMAT(CharVar[6])+FORMAT(CharVar[7]);
      AnsiStr := AnsiStr + 'Æ¨Ω'+FORMAT(CharVar[8])+'°´'+FORMAT(CharVar[9])+'___¶¶' + FORMAT(CharVar[10])+FORMAT(CharVar[11]);
      AnsiStr := AnsiStr + FORMAT(CharVar[12]) + '©¶¶++¢•++--+-+„' + FORMAT(CharVar[13]) + '++--¶-+§–';
      AnsiStr  :=  AnsiStr +FORMAT(CharVar[14])+FORMAT(CharVar[15])+FORMAT(CharVar[16])+'i'+FORMAT(CharVar[17])+FORMAT(CharVar[18]);
      AnsiStr  :=  AnsiStr + 'œ++__¶' + FORMAT(CharVar[19])+FORMAT(CharVar[20])+'”'+FORMAT(CharVar[21])+'‘“ı';
      AnsiStr  :=  AnsiStr + FORMAT(CharVar[22]) + 'µ' + FORMAT(CharVar[23]) + 'ﬁ' + FORMAT(CharVar[24])+ FORMAT(CharVar[25]);
      AnsiStr  :=  AnsiStr + FORMAT(CharVar[26]) + '˝›Ø' + FORMAT(CharVar[27]) + '≠' + FORMAT(CharVar[28]) +'=æ∂ß˜∏'+ FORMAT(CharVar[29]
      );
      AnsiStr  :=  AnsiStr + '®∑' + FORMAT(CharVar[30]) +FORMAT(CharVar[31]) +FORMAT(CharVar[32]) +'_ ';
    END;

    PROCEDURE CompletedBy@1180250004(String@1180250001 : Text[256];Len@1180250002 : Integer) StringCompleted : Text[70];
    VAR
      StringLen@1180250005 : Integer;
      NbrOfLoop@1180250007 : Integer;
      i@1180250003 : Integer;
      Char2Substitute@1180250006 : Text[1];
    BEGIN
      Char2Substitute := ' ';

      StringLen := STRLEN(FORMAT(String));
      IF StringLen = 0 THEN
        NbrOfLoop := Len
      ELSE BEGIN
        IF StringLen > Len THEN BEGIN
          NbrOfLoop := 0;
          String := COPYSTR(String,1,Len);
        END ELSE
          NbrOfLoop := Len - StringLen;
      END;

      StringCompleted := String;

      IF NbrOfLoop > 0 THEN
        FOR i := 1 TO NbrOfLoop DO
          StringCompleted := StringCompleted + Char2Substitute;
    END;

    PROCEDURE ConvComa2Dot@1180250006(String@1180250001 : Text[1024]) NewString : Text[1024];
    BEGIN
      String := FORMAT(String);
      NewString := CONVERTSTR(String,',','.');
    END;

    PROCEDURE ConvChar2Space@1180250007(String@1180250001 : Text[1024]) NewString : Text[1024];
    BEGIN
      String := FORMAT(String);
      NewString := CONVERTSTR(String,'|',' ');

      NewString := FORMAT(String);
      NewString := CONVERTSTR(String,'_',' ');
    END;

    PROCEDURE CreateEDILogEntry@1180250002(EDICode@1180250003 : Code[10];EDILogDT@1180250002 : DateTime;String@1180250001 : Text[250];Status@1180250006 : ' ,OK,Error';EntryNo2@1180250007 : Integer);
    VAR
      EDILogEntry@1180250004 : Record 50004;
      LineNo@1180250005 : Integer;
    BEGIN
      EDILogEntry.RESET;
      EDILogEntry.SETRANGE("EDI Code",EDICode);
      EDILogEntry.SETRANGE("Treatment Date",EDILogDT);
      IF EDILogEntry.FINDLAST THEN
        LineNo := EDILogEntry."Ligne No."
      ELSE
        LineNo := 0;

      LineNo += 10000;

      EDILogEntry.INIT;
      EDILogEntry."EDI Code" := EDICode;
      EDILogEntry."Treatment Date" := EDILogDT;
      EDILogEntry."Ligne No." := LineNo;
      EDILogEntry."Error Text" := String;
      EDILogEntry.Status := Status;
      EDILogEntry."Applied E.D.I. Entry No." := EntryNo2;
      EDILogEntry.INSERT;
    END;

    PROCEDURE GetFormatDT@1180250008(FromDTText@1180250001 : Text[50]) : Text[14];
    BEGIN
      IF FromDTText <> '' THEN
        EXIT(DELCHR(FromDTText,'=',' ""#%&*:<>?\/{|}~'))
      ELSE
        EXIT('')
    END;

    BEGIN
    END.
  }
}

